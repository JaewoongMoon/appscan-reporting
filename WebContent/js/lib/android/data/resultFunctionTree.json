    {"name": "Root","children": [ 
    {"name": "attack","children": [ 
    ] } ,
    {"name": "damage","children": [ 
    ] } ,
    {"name": "hp","children": [ 
    ] } ,
    {"name": "price","children": [ 
    ] } ,
    {"name": "item","children": [ 
    {"name": "AchievementUI.cs","children": [ 
    {"name": "this._slotDataList.Add(item);" }, 
    {"name": "this._slotDataList.Add(item);" }, 
    {"name": "this._slotDataProgressList.Add(item);" }, 
    {"name": "this._slotDataList.Add(item);" }, 
    {"name": "this._slotDataList.Add(item);" }, 
    {"name": "this._slotDataProgressList.Add(item);" }, 
    {"name": "this._slotDataList.Add(item);" }, 
    {"name": "this._slotDataList.Add(item);" }, 
    {"name": "this._slotDataProgressList.Add(item);" }, 
    {"name": "this._slotDataList.Add(item);" }, 
    {"name": "this._slotDataList.Add(item);" }, 
    {"name": "this._slotDataProgressList.Add(item);" } 
    ] },
    {"name": "AchieveStorage.cs","children": [ 
    {"name": "achieveInfos.Add(item);" } 
    ] },
    {"name": "BetterList_T_.cs","children": [ 
    {"name": "if (this.buffer[i].Equals(item))" }, 
    {"name": "if (this.buffer[i].Equals(item))" }, 
    {"name": "this.Add(item);" } 
    ] },
    {"name": "HeroUIInfo.cs","children": [ 
    {"name": "CommonUI.Instance.ToolTipItem(item);" } 
    ] },
    {"name": "HeroUITeam.cs","children": [ 
    {"name": "this._heroCards[i].Setup(item);" } 
    ] },
    {"name": "InvDatabase.cs","children": [ 
    {"name": "if (invDatabase.items.Contains(item))" } 
    ] },
    {"name": "PacketManager.cs","children": [ 
    {"name": "eventHandler(item);" } 
    ] },
    {"name": "PlayerManager.cs","children": [ 
    {"name": "this._heroes[this._curPlayCharacterIdx].MoveSet(item);" } 
    ] },
    {"name": "QuestManager.cs","children": [ 
    {"name": "this._appearMonsterList.Remove(item);" } 
    ] },
    {"name": "SoundManager.cs","children": [ 
    {"name": "Resources.UnloadAsset(item);" } 
    ] },
    {"name": "UIPanel.cs","children": [ 
    {"name": "UIDrawCall.Destroy(item);" }, 
    {"name": "if (!item.isDirty || this.FillDrawCall(item))" }, 
    {"name": "UIDrawCall.Destroy(item);" }, 
    {"name": "flag = (flag3 || item.hideIfOffScreen ? this.IsVisible(item) : true);" }, 
    {"name": "this.FindDrawCall(item);" } 
    ] },
    {"name": "UIPopupList.cs","children": [ 
    {"name": "str.text = (!this.isLocalized ? item : Localization.Get(item));" } 
    ] },
    {"name": "UISprite.cs","children": [ 
    {"name": "this.SetAtlasSprite(item);" } 
    ] },
    {"name": "UITextList.cs","children": [ 
    {"name": "this.mParagraphs.Add(item);" } 
    ] },
    {"name": "AndroidFacebook.cs","children": [ 
    {"name": "base.OnFacebookResponse(str, new FBResult(Json.Serialize(item),Malformed request response.  Please file a bug with facebook here: https://developers.facebook.com/bugs/create));" }, 
    {"name": "base.OnFacebookResponse(str, new FBResult(Json.Serialize(item), null));" }, 
    {"name": "base.OnFacebookResponse(str, new FBResult(Json.Serialize(item),Malformed request response.  Please file a bug with facebook here: https://developers.facebook.com/bugs/create));" }, 
    {"name": "base.OnFacebookResponse(str, new FBResult(Json.Serialize(item), null));" } 
    ] },
    {"name": "XmlNodeConverter.cs","children": [ 
    {"name": "xmlNodes.Add(item);" } 
    ] },
    {"name": "JArray.cs","children": [ 
    {"name": "this.Add(item);" }, 
    {"name": "return this.ContainsItem(item);" }, 
    {"name": "return base.IndexOfItem(item);" }, 
    {"name": "return this.RemoveItem(item);" } 
    ] },
    {"name": "JContainer.cs","children": [ 
    {"name": "return this.IndexOfItem(item) != -1;" }, 
    {"name": "item = this.EnsureParentToken(item);" }, 
    {"name": "int num = this.IndexOfItem(item);" }, 
    {"name": "item = this.EnsureParentToken(item);" }, 
    {"name": "this.Add(item);" }, 
    {"name": "return this.ContainsItem(item);" }, 
    {"name": "return this.RemoveItem(item);" }, 
    {"name": "return this.IndexOfItem(item);" } 
    ] },
    {"name": "JObject.cs","children": [ 
    {"name": "if (!((ICollection<KeyValuePair<string, JToken>>)this).Contains(item))" }, 
    {"name": "string keyForItem = this.GetKeyForItem(item);" } 
    ] },
    {"name": "JsonPropertyCollection.cs","children": [ 
    {"name": "this.Remove(item);" } 
    ] },
    {"name": "CollectionWrapper_T_.cs","children": [ 
    {"name": "this._list.Add(item);" }, 
    {"name": "this._genericCollection.Add(item);" }, 
    {"name": "return this._genericCollection.Contains(item);" }, 
    {"name": "return this._list.Contains(item);" }, 
    {"name": "return this._genericCollection.Remove(item);" }, 
    {"name": "bool flag = this._list.Contains(item);" }, 
    {"name": "this._list.Remove(item);" } 
    ] },
    {"name": "DictionaryWrapper_TKey, TValue_.cs","children": [ 
    {"name": "((IList)this._dictionary).Add(item);" }, 
    {"name": "this._genericDictionary.Add(item);" }, 
    {"name": "return this._genericDictionary.Contains(item);" }, 
    {"name": "return ((IList)this._dictionary).Contains(item);" }, 
    {"name": "return this._genericDictionary.Remove(item);" } 
    ] },
    {"name": "ListWrapper_T_.cs","children": [ 
    {"name": "base.Add(item);" }, 
    {"name": "this._genericList.Add(item);" }, 
    {"name": "return base.Contains(item);" }, 
    {"name": "return this._genericList.Contains(item);" }, 
    {"name": "return this._genericList.IndexOf(item);" }, 
    {"name": "return ((IList)this).IndexOf(item);" }, 
    {"name": "return this._genericList.Remove(item);" }, 
    {"name": "bool flag = base.Contains(item);" }, 
    {"name": "base.Remove(item);" } 
    ] }
    ] } ,
    {"name": "player","children": [ 
    ] } ,
    {"name": "monster","children": [ 
    ] }
    ] }